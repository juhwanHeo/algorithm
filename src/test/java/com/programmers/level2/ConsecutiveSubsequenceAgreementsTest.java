package com.programmers.level2;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class ConsecutiveSubsequenceAgreementsTest {
    @Test
    void solution1() {
        int[] elements = {7, 9, 1, 1, 4};

        int expected = 18;
        int result = ConsecutiveSubsequenceAgreements.solution(elements);

        System.out.println("result = " + result);
        assertEquals(expected, result);
    }

    @Test
    void solution2() {
        int[] elements = {
                7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786
                ,7, 9, 1, 1, 4, 2, 3, 4, 1, 2, 3, 32, 13, 214, 4, 23, 1, 42, 15, 521, 3, 421, 42, 12, 412, 321, 32, 14, 213, 21, 4, 231, 342, 41, 3, 214, 1, 321, 3, 21, 32, 4, 5, 45, 445, 7, 8, 8, 87, 9, 9, 87, 6, 876, 9, 9, 4, 3, 2, 1, 2, 442, 12, 32, 455, 6, 7, 8, 9, 786

        };

        int expected = 46522;
        int result = ConsecutiveSubsequenceAgreements.solution(elements);

        System.out.println("result = " + result);
        assertEquals(expected, result);
    }
}